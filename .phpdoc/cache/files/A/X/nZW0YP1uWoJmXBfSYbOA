1682707899
waR3U4bTeM%3A16a3421602c4e55f459cf205fa2a3356-421f48e1600d2cf272ee3cfaa3f63b72
s:44900:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"421f48e1600d2cf272ee3cfaa3f63b72";s:39:" phpDocumentor\Reflection\Php\File name";s:33:"PhpdocToPropertyTypeFixerTest.php";s:39:" phpDocumentor\Reflection\Php\File path";s:114:"tools/php-cs-fixer/vendor/friendsofphp/php-cs-fixer/tests/Fixer/FunctionNotation/PhpdocToPropertyTypeFixerTest.php";s:41:" phpDocumentor\Reflection\Php\File source";s:17880:"<?php

declare(strict_types=1);

/*
 * This file is part of PHP CS Fixer.
 *
 * (c) Fabien Potencier <fabien@symfony.com>
 *     Dariusz Rumiński <dariusz.ruminski@gmail.com>
 *
 * This source file is subject to the MIT license that is bundled
 * with this source code in the file LICENSE.
 */

namespace PhpCsFixer\Tests\Fixer\FunctionNotation;

use PhpCsFixer\Tests\Test\AbstractFixerTestCase;

/**
 * @internal
 *
 * @covers \PhpCsFixer\Fixer\FunctionNotation\PhpdocToPropertyTypeFixer
 */
final class PhpdocToPropertyTypeFixerTest extends AbstractFixerTestCase
{
    /**
     * @dataProvider provideFixCases
     */
    public function testFix(string $expected, ?string $input = null, array $config = []): void
    {
        if (null !== $input && \PHP_VERSION_ID < 70400) {
            $expected = $input;
            $input = null;
        }

        $this->fixer->configure($config);
        $this->doTest($expected, $input);
    }

    public function provideFixCases(): array
    {
        return [
            'no phpdoc return' => [
                '<?php class Foo { private $foo; }',
            ],
            'invalid return' => [
                '<?php class Foo { /** @var */ private $foo; }',
            ],
            'invalid class 1' => [
                '<?php class Foo { /** @var \9 */ private $foo; }',
            ],
            'invalid class 2' => [
                '<?php class Foo { /** @var \\Foo\\\\Bar */ private $foo; }',
            ],
            'multiple returns' => [
                '<?php
                    class Foo {
                        /**
                         * @var Bar
                         * @var Baz
                         */
                        private $foo;
                    }
                ',
            ],
            'non-root class' => [
                '<?php class Foo { /** @var Bar */ private Bar $foo; }',
                '<?php class Foo { /** @var Bar */ private $foo; }',
            ],
            'non-root namespaced class' => [
                '<?php class Foo { /** @var My\Bar */ private My\Bar $foo; }',
                '<?php class Foo { /** @var My\Bar */ private $foo; }',
            ],
            'root class' => [
                '<?php class Foo { /** @var \My\Bar */ private \My\Bar $foo; }',
                '<?php class Foo { /** @var \My\Bar */ private $foo; }',
            ],
            'void' => [
                '<?php class Foo { /** @var void */ private $foo; }',
            ],
            'never' => [
                '<?php class Foo { /** @var never */ private $foo; }',
            ],
            'iterable' => [
                '<?php class Foo { /** @var iterable */ private iterable $foo; }',
                '<?php class Foo { /** @var iterable */ private $foo; }',
            ],
            'object' => [
                '<?php class Foo { /** @var object */ private object $foo; }',
                '<?php class Foo { /** @var object */ private $foo; }',
            ],
            'fix scalar types by default, int' => [
                '<?php class Foo { /** @var int */ private int $foo; }',
                '<?php class Foo { /** @var int */ private $foo; }',
            ],
            'fix scalar types by default, float' => [
                '<?php class Foo { /** @var float */ private float $foo; }',
                '<?php class Foo { /** @var float */ private $foo; }',
            ],
            'fix scalar types by default, string' => [
                '<?php class Foo { /** @var string */ private string $foo; }',
                '<?php class Foo { /** @var string */ private $foo; }',
            ],
            'fix scalar types by default, bool' => [
                '<?php class Foo { /** @var bool */ private bool $foo; }',
                '<?php class Foo { /** @var bool */ private $foo; }',
            ],
            'fix scalar types by default, false' => [
                '<?php class Foo { /** @var false */ private bool $foo; }',
                '<?php class Foo { /** @var false */ private $foo; }',
            ],
            'fix scalar types by default, true' => [
                '<?php class Foo { /** @var true */ private bool $foo; }',
                '<?php class Foo { /** @var true */ private $foo; }',
            ],
            'do not fix scalar types when configured as such' => [
                '<?php class Foo { /** @var int */ private $foo; }',
                null,
                ['scalar_types' => false],
            ],
            'array native type' => [
                '<?php class Foo { /** @var array */ private array $foo; }',
                '<?php class Foo { /** @var array */ private $foo; }',
            ],
            'callable type' => [
                '<?php class Foo { /** @var callable */ private $foo; }',
            ],
            'self accessor' => [
                '<?php class Foo { /** @var self */ private self $foo; }',
                '<?php class Foo { /** @var self */ private $foo; }',
            ],
            'report static as self' => [
                '<?php class Foo { /** @var static */ private self $foo; }',
                '<?php class Foo { /** @var static */ private $foo; }',
            ],
            'skip resource special type' => [
                '<?php class Foo { /** @var resource */ private $foo; }',
            ],
            'skip mixed special type' => [
                '<?php class Foo { /** @var mixed */ private $foo; }',
            ],
            'null alone cannot be a property type' => [
                '<?php class Foo { /** @var null */ private $foo; }',
            ],
            'skip mixed types' => [
                '<?php class Foo { /** @var Foo|Bar */ private $foo; }',
            ],
            'nullable type' => [
                '<?php class Foo { /** @var null|Bar */ private ?Bar $foo; }',
                '<?php class Foo { /** @var null|Bar */ private $foo; }',
            ],
            'nullable type reverse order' => [
                '<?php class Foo { /** @var Bar|null */ private ?Bar $foo; }',
                '<?php class Foo { /** @var Bar|null */ private $foo; }',
            ],
            'nullable native type' => [
                '<?php class Foo { /** @var null|array */ private ?array $foo; }',
                '<?php class Foo { /** @var null|array */ private $foo; }',
            ],
            'skip mixed nullable types' => [
                '<?php class Foo { /** @var null|Foo|Bar */ private $foo; }',
            ],
            'generics' => [
                '<?php class Foo { /** @var array<int, bool> */ private array $foo; }',
                '<?php class Foo { /** @var array<int, bool> */ private $foo; }',
            ],
            'array of types' => [
                '<?php class Foo { /** @var Foo[] */ private array $foo; }',
                '<?php class Foo { /** @var Foo[] */ private $foo; }',
            ],
            'array of array of types' => [
                '<?php class Foo { /** @var Foo[][] */ private array $foo; }',
                '<?php class Foo { /** @var Foo[][] */ private $foo; }',
            ],
            'nullable array of types' => [
                '<?php class Foo { /** @var null|Foo[] */ private ?array $foo; }',
                '<?php class Foo { /** @var null|Foo[] */ private $foo; }',
            ],
            'comments' => [
                '<?php
                    class Foo
                    {
                        // comment 0
                        /** @var Foo */ # comment 1
                        public/**/Foo $foo/**/;# comment 2
                    }
                ',
                '<?php
                    class Foo
                    {
                        // comment 0
                        /** @var Foo */ # comment 1
                        public/**/$foo/**/;# comment 2
                    }
                ',
            ],
            'array and traversable' => [
                '<?php class Foo { /** @var array|Traversable */ private iterable $foo; }',
                '<?php class Foo { /** @var array|Traversable */ private $foo; }',
            ],
            'array and traversable with leading slash' => [
                '<?php class Foo { /** @var array|\Traversable */ private iterable $foo; }',
                '<?php class Foo { /** @var array|\Traversable */ private $foo; }',
            ],
            'array and traversable in a namespace' => [
                '<?php
                     namespace App;
                     class Foo {
                         /** @var array|Traversable */
                         private $foo;
                     }
                ',
            ],
            'array and traversable with leading slash in a namespace' => [
                '<?php
                     namespace App;
                     class Foo {
                         /** @var array|\Traversable */
                         private iterable $foo;
                     }
                ',
                '<?php
                     namespace App;
                     class Foo {
                         /** @var array|\Traversable */
                         private $foo;
                     }
                ',
            ],
            'array and imported traversable in a namespace' => [
                '<?php
                     namespace App;
                     use Traversable;
                     class Foo {
                         /** @var array|Traversable */
                         private iterable $foo;
                     }
                ',
                '<?php
                     namespace App;
                     use Traversable;
                     class Foo {
                         /** @var array|Traversable */
                         private $foo;
                     }
                ',
            ],
            'array and object aliased as traversable in a namespace' => [
                '<?php
                     namespace App;
                     use Bar as Traversable;
                     class Foo {
                         /** @var array|Traversable */
                         private $foo;
                     }
                ',
                null,
            ],
            'array of object and traversable' => [
                '<?php class Foo { /** @var Foo[]|Traversable */ private iterable $foo; }',
                '<?php class Foo { /** @var Foo[]|Traversable */ private $foo; }',
            ],
            'array of object and iterable' => [
                '<?php class Foo { /** @var Foo[]|iterable */ private iterable $foo; }',
                '<?php class Foo { /** @var Foo[]|iterable */ private $foo; }',
            ],
            'array of string and array of int' => [
                '<?php class Foo { /** @var string[]|int[] */ private array $foo; }',
                '<?php class Foo { /** @var string[]|int[] */ private $foo; }',
            ],
            'trait' => [
                '<?php trait Foo { /** @var int */ private int $foo; }',
                '<?php trait Foo { /** @var int */ private $foo; }',
            ],
            'static property' => [
                '<?php class Foo { /** @var int */ private static int $foo; }',
                '<?php class Foo { /** @var int */ private static $foo; }',
            ],
            'static property reverse order' => [
                '<?php class Foo { /** @var int */ static private int $foo; }',
                '<?php class Foo { /** @var int */ static private $foo; }',
            ],
            'var' => [
                '<?php class Foo { /** @var int */ var int $foo; }',
                '<?php class Foo { /** @var int */ var $foo; }',
            ],
            'with default value' => [
                '<?php class Foo { /** @var int */ public int $foo = 1; }',
                '<?php class Foo { /** @var int */ public $foo = 1; }',
            ],
            'multiple properties of the same type' => [
                '<?php class Foo {
                    /**
                     * @var int $foo
                     * @var int $bar
                     */
                    public int $foo, $bar;
                }',
                '<?php class Foo {
                    /**
                     * @var int $foo
                     * @var int $bar
                     */
                    public $foo, $bar;
                }',
            ],
            'multiple properties of different types' => [
                '<?php class Foo {
                    /**
                     * @var int    $foo
                     * @var string $bar
                     */
                    public $foo, $bar;
                }',
            ],
            'single property with different annotations' => [
                '<?php class Foo {
                    /**
                     * @var int    $foo
                     * @var string $foo
                     */
                    public $foo;
                }',
            ],
            'multiple properties with missing annotation' => [
                '<?php class Foo {
                    /**
                     * @var int $foo
                     */
                    public $foo, $bar;
                }',
            ],
            'multiple properties with annotation without name' => [
                '<?php class Foo {
                    /**
                     * @var int
                     * @var int $bar
                     */
                    public $foo, $bar;
                }',
            ],
            'multiple properties with annotation without name reverse order' => [
                '<?php class Foo {
                    /**
                     * @var int $foo
                     * @var int
                     */
                    public $foo, $bar;
                }',
            ],
            'multiple properties with extra annotations' => [
                '<?php class Foo {
                    /**
                     * @var string
                     * @var int $foo
                     * @var int $bar
                     * @var int
                     */
                    public int $foo, $bar;
                }',
                '<?php class Foo {
                    /**
                     * @var string
                     * @var int $foo
                     * @var int $bar
                     * @var int
                     */
                    public $foo, $bar;
                }',
            ],
            'abstract method' => [
                '<?php abstract class Foo {
                    /** @var Bar */ private Bar $foo;

                    public abstract function getFoo();
                }',
                '<?php abstract class Foo {
                    /** @var Bar */ private $foo;

                    public abstract function getFoo();
                }',
            ],
            'great number of properties' => [
                '<?php class Foo {
                    /** @var string */
                    private string $foo1;

                    /** @var string */
                    private string $foo2;

                    /** @var int */
                    private int $foo3;

                    /** @var string */
                    private string $foo4;

                    /** @var string */
                    private string $foo5;

                    /** @var string */
                    private string $foo6;

                    /** @var string */
                    private string $foo7;

                    /** @var int */
                    private int $foo8;

                    /** @var string */
                    private string $foo9;

                    /** @var int|null */
                    private ?int $foo10;
                }',
                '<?php class Foo {
                    /** @var string */
                    private $foo1;

                    /** @var string */
                    private $foo2;

                    /** @var int */
                    private $foo3;

                    /** @var string */
                    private $foo4;

                    /** @var string */
                    private $foo5;

                    /** @var string */
                    private $foo6;

                    /** @var string */
                    private $foo7;

                    /** @var int */
                    private $foo8;

                    /** @var string */
                    private $foo9;

                    /** @var int|null */
                    private $foo10;
                }',
            ],
            'anonymous class' => [
                '<?php new class { /** @var int */ private int $foo; };',
                '<?php new class { /** @var int */ private $foo; };',
            ],
            'intersection types' => [
                '<?php class Foo { /** @var Bar&Baz */ private $x; }',
            ],
            'very long class name before ampersand' => [
                '<?php class Foo { /** @var Baaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaar&Baz */ private $x; }',
            ],
            'very long class name after ampersand' => [
                '<?php class Foo { /** @var Bar&Baaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaz */ private $x; }',
            ],
        ];
    }

    /**
     * @dataProvider provideFix81Cases
     * @requires PHP 8.1
     */
    public function testFix81(string $expected): void
    {
        $this->doTest($expected);
    }

    public function provideFix81Cases(): \Generator
    {
        yield 'readonly properties are always typed, make sure the fixer does not crash' => [
            '<?php class Foo { /** @var int */ private readonly string $foo; }',
        ];
    }
}
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:1:{s:40:"\PhpCsFixer\Tests\Fixer\FunctionNotation";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:40:"\PhpCsFixer\Tests\Fixer\FunctionNotation";s:36:" phpDocumentor\Reflection\Fqsen name";s:16:"FunctionNotation";}}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:1:{s:70:"\PhpCsFixer\Tests\Fixer\FunctionNotation\PhpdocToPropertyTypeFixerTest";O:35:"phpDocumentor\Reflection\Php\Class_":13:{s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:70:"\PhpCsFixer\Tests\Fixer\FunctionNotation\PhpdocToPropertyTypeFixerTest";s:36:" phpDocumentor\Reflection\Fqsen name";s:29:"PhpdocToPropertyTypeFixerTest";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:0:"";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:8:"internal";s:14:" * description";N;}i:1;O:45:"phpDocumentor\Reflection\DocBlock\Tags\Covers":3:{s:7:" * name";s:6:"covers";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:53:" phpDocumentor\Reflection\DocBlock\Tags\Covers refers";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:60:"\PhpCsFixer\Fixer\FunctionNotation\PhpdocToPropertyTypeFixer";s:36:" phpDocumentor\Reflection\Fqsen name";s:25:"PhpdocToPropertyTypeFixer";}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:39:"PhpCsFixer\Tests\Fixer\FunctionNotation";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:1:{s:21:"AbstractFixerTestCase";s:43:"PhpCsFixer\Tests\Test\AbstractFixerTestCase";}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:1;s:43:" phpDocumentor\Reflection\Php\Class_ parent";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:44:"\PhpCsFixer\Tests\Test\AbstractFixerTestCase";s:36:" phpDocumentor\Reflection\Fqsen name";s:21:"AbstractFixerTestCase";}s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:0:{}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:0:{}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:4:{s:81:"\PhpCsFixer\Tests\Fixer\FunctionNotation\PhpdocToPropertyTypeFixerTest::testFix()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:0:"";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:12:"dataProvider";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:15:"provideFixCases";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:36;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:81:"\PhpCsFixer\Tests\Fixer\FunctionNotation\PhpdocToPropertyTypeFixerTest::testFix()";s:36:" phpDocumentor\Reflection\Fqsen name";s:7:"testFix";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:3:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:8:"expected";s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:5:"input";s:43:" phpDocumentor\Reflection\Php\Argument type";O:39:"phpDocumentor\Reflection\Types\Nullable":1:{s:49:" phpDocumentor\Reflection\Types\Nullable realType";O:38:"phpDocumentor\Reflection\Types\String_":0:{}}s:46:" phpDocumentor\Reflection\Php\Argument default";s:4:"null";s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:2;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:6:"config";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:46:" phpDocumentor\Reflection\Php\Argument default";s:2:"[]";s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:29;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:38;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:36:"phpDocumentor\Reflection\Types\Void_":0:{}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:89:"\PhpCsFixer\Tests\Fixer\FunctionNotation\PhpdocToPropertyTypeFixerTest::provideFixCases()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:89:"\PhpCsFixer\Tests\Fixer\FunctionNotation\PhpdocToPropertyTypeFixerTest::provideFixCases()";s:36:" phpDocumentor\Reflection\Fqsen name";s:15:"provideFixCases";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:40;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:461;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:83:"\PhpCsFixer\Tests\Fixer\FunctionNotation\PhpdocToPropertyTypeFixerTest::testFix81()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:0:"";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:12:"dataProvider";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:17:"provideFix81Cases";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:8:"requires";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:7:"PHP 8.1";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:36;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:83:"\PhpCsFixer\Tests\Fixer\FunctionNotation\PhpdocToPropertyTypeFixerTest::testFix81()";s:36:" phpDocumentor\Reflection\Fqsen name";s:9:"testFix81";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:8:"expected";s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:467;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:470;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:36:"phpDocumentor\Reflection\Types\Void_":0:{}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:91:"\PhpCsFixer\Tests\Fixer\FunctionNotation\PhpdocToPropertyTypeFixerTest::provideFix81Cases()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:91:"\PhpCsFixer\Tests\Fixer\FunctionNotation\PhpdocToPropertyTypeFixerTest::provideFix81Cases()";s:36:" phpDocumentor\Reflection\Fqsen name";s:17:"provideFix81Cases";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:472;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:477;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:10:"\Generator";s:36:" phpDocumentor\Reflection\Fqsen name";s:9:"Generator";}}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:24;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Class_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:478;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:45:" phpDocumentor\Reflection\Php\Class_ metadata";a:0:{}}}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";