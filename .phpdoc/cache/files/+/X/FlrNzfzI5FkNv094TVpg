1682707917
waR3U4bTeM%3Ab741854a49e9e6e169fc118c9b3dca08-f0747d4dba75bdea62d2ab2b9eccbc15
s:52040:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"f0747d4dba75bdea62d2ab2b9eccbc15";s:39:" phpDocumentor\Reflection\Php\File name";s:37:"ControlCaseStructuresAnalyzerTest.php";s:39:" phpDocumentor\Reflection\Php\File path";s:114:"tools/php-cs-fixer/vendor/friendsofphp/php-cs-fixer/tests/Tokenizer/Analyzer/ControlCaseStructuresAnalyzerTest.php";s:41:" phpDocumentor\Reflection\Php\File source";s:15808:"<?php

declare(strict_types=1);

/*
 * This file is part of PHP CS Fixer.
 *
 * (c) Fabien Potencier <fabien@symfony.com>
 *     Dariusz Rumiński <dariusz.ruminski@gmail.com>
 *
 * This source file is subject to the MIT license that is bundled
 * with this source code in the file LICENSE.
 */

namespace PhpCsFixer\Tests\Tokenizer\Analyzer;

use PhpCsFixer\Tests\TestCase;
use PhpCsFixer\Tokenizer\Analyzer\Analysis\AbstractControlCaseStructuresAnalysis;
use PhpCsFixer\Tokenizer\Analyzer\Analysis\CaseAnalysis;
use PhpCsFixer\Tokenizer\Analyzer\Analysis\DefaultAnalysis;
use PhpCsFixer\Tokenizer\Analyzer\Analysis\EnumAnalysis;
use PhpCsFixer\Tokenizer\Analyzer\Analysis\MatchAnalysis;
use PhpCsFixer\Tokenizer\Analyzer\Analysis\SwitchAnalysis;
use PhpCsFixer\Tokenizer\Analyzer\ControlCaseStructuresAnalyzer;
use PhpCsFixer\Tokenizer\Tokens;

/**
 * @covers \PhpCsFixer\Tokenizer\Analyzer\ControlCaseStructuresAnalyzer
 *
 * @internal
 */
final class ControlCaseStructuresAnalyzerTest extends TestCase
{
    /**
     * @dataProvider provideFindControlStructuresCases
     */
    public function testFindControlStructures(array $expectedAnalyses, string $source): void
    {
        $tokens = Tokens::fromCode($source);
        $analyses = iterator_to_array(ControlCaseStructuresAnalyzer::findControlStructures($tokens, [T_SWITCH]));

        static::assertCount(\count($expectedAnalyses), $analyses);

        foreach ($expectedAnalyses as $index => $expectedAnalysis) {
            self::assertAnalysis($expectedAnalysis, $analyses[$index]);
        }
    }

    public function provideFindControlStructuresCases(): \Generator
    {
        yield 'two cases' => [
            [1 => new SwitchAnalysis(1, 7, 46, [new CaseAnalysis(9, 12), new CaseAnalysis(36, 39)], null)],
            '<?php switch ($foo) {
                case 1: $x = bar() ? 1 : 0; return true;
                case 2: return false;
            }',
        ];

        yield 'case without code' => [
            [1 => new SwitchAnalysis(1, 7, 34, [new CaseAnalysis(9, 12), new CaseAnalysis(19, 22), new CaseAnalysis(24, 27)], null)],
            '<?php switch ($foo) {
                case 1: return true;
                case 2:
                case 3: return false;
            }',
        ];

        yield 'advanced cases' => [
            [
                1 => new SwitchAnalysis(
                    1,
                    7,
                    132,
                    [
                        new CaseAnalysis(17, 22),
                        new CaseAnalysis(29, 40),
                        new CaseAnalysis(47, 53),
                        new CaseAnalysis(60, 71),
                        new CaseAnalysis(78, 125),
                    ],
                    new DefaultAnalysis(9, 10)
                ),
            ],
            '<?php switch (true) {
                default: return 0;
                case ("a"): return 1;
                case [1, 2, 3]: return 2;
                case getValue($foo): return 3;
                case getValue2($foo)["key"]->bar: return 4;
                case $a->$b::$c->${$d}->${$e}::foo(function ($x) { return $x * 2 + 2; })->$g::$h: return 5;
            }',
        ];

        yield 'two case and default' => [
            [1 => new SwitchAnalysis(1, 7, 38, [new CaseAnalysis(9, 12), new CaseAnalysis(19, 22)], new DefaultAnalysis(29, 30))],
            '<?php switch ($foo) { case 10: return true; case 100: return false; default: return -1; }',
        ];

        yield 'two case and default with semicolon instead of colon' => [
            [1 => new SwitchAnalysis(1, 7, 38, [new CaseAnalysis(9, 12), new CaseAnalysis(19, 22)], new DefaultAnalysis(29, 30))],
            '<?php switch ($foo) { case 10; return true; case 100; return false; default; return -1; }',
        ];

        yield 'ternary operator in case' => [
            [1 => new SwitchAnalysis(1, 7, 39, [new CaseAnalysis(9, 22), new CaseAnalysis(29, 32)], null)],
            '<?php switch ($foo) { case ($bar ? 10 : 20): return true; case 100: return false; }',
        ];

        yield 'nested switch' => [
            [
                1 => new SwitchAnalysis(1, 7, 67, [new CaseAnalysis(9, 12), new CaseAnalysis(57, 60)], null),
                14 => new SwitchAnalysis(14, 20, 52, [new CaseAnalysis(22, 25), new CaseAnalysis(32, 35), new CaseAnalysis(42, 45)], null),
            ],
            '<?php switch ($foo) { case 10:
                switch ($bar) { case "a": return "b"; case "c": return "d"; case "e": return "f"; }
                return;
                case 100: return false; }',
        ];

        yield 'switch in case' => [
            [
                1 => new SwitchAnalysis(1, 7, 98, [new CaseAnalysis(9, 81), new CaseAnalysis(88, 91)], null),
                25 => new SwitchAnalysis(25, 31, 63, [new CaseAnalysis(33, 36), new CaseAnalysis(43, 46), new CaseAnalysis(53, 56)], null),
            ],
            '<?php
switch ($foo) {
    case (
        array_sum(array_map(function ($x) { switch ($bar) { case "a": return "b"; case "c": return "d"; case "e": return "f"; } }, [1, 2, 3]))
    ):
        return true;
    case 100:
        return false;
}
',
        ];

        yield 'alternative syntax' => [
            [1 => new SwitchAnalysis(1, 7, 30, [new CaseAnalysis(9, 12), new CaseAnalysis(19, 22)], null)],
            '<?php switch ($foo) : case 10: return true; case 100: return false; endswitch;',
        ];

        yield 'alternative syntax with closing tag' => [
            [1 => new SwitchAnalysis(1, 7, 31, [new CaseAnalysis(9, 12), new CaseAnalysis(19, 22)], null)],
            '<?php switch ($foo) : case 10: return true; case 100: return false; endswitch ?>',
        ];

        yield 'alternative syntax nested' => [
            [
                1 => new SwitchAnalysis(1, 7, 69, [new CaseAnalysis(9, 12), new CaseAnalysis(58, 61)], null),
                14 => new SwitchAnalysis(14, 20, 53, [new CaseAnalysis(22, 25), new CaseAnalysis(32, 35), new CaseAnalysis(42, 45)], null),
            ],
            '<?php switch ($foo) : case 10:
                switch ($bar) : case "a": return "b"; case "c": return "d"; case "e": return "f"; endswitch;
                return;
                case 100: return false; endswitch;',
        ];

        yield 'alternative syntax nested with mixed colon/semicolon' => [
            [
                1 => new SwitchAnalysis(1, 7, 69, [new CaseAnalysis(9, 12), new CaseAnalysis(58, 61)], null),
                14 => new SwitchAnalysis(14, 20, 53, [new CaseAnalysis(22, 25), new CaseAnalysis(32, 35), new CaseAnalysis(42, 45)], null),
            ],
            '<?php switch ($foo) : case 10;
                switch ($bar) : case "a": return "b"; case "c"; return "d"; case "e": return "f"; endswitch;
                return;
                case 100: return false; endswitch;',
        ];

        yield 'alternative syntax nested with closing tab and mixed colon/semicolon' => [
            [
                1 => new SwitchAnalysis(1, 7, 70, [new CaseAnalysis(9, 12), new CaseAnalysis(58, 61)], null),
                14 => new SwitchAnalysis(14, 20, 53, [new CaseAnalysis(22, 25), new CaseAnalysis(32, 35), new CaseAnalysis(42, 45)], null),
            ],
            '<?php switch ($foo) : case 10;
                switch ($bar) : case "a": return "b"; case "c"; return "d"; case "e": return "f"; endswitch;
                return;
                case 100: return false; endswitch ?>  <?php echo 1;',
            1,
        ];

        $expected = [
            1 => new SwitchAnalysis(
                1,
                6,
                22,
                [
                    new CaseAnalysis(8, 11),
                ],
                new DefaultAnalysis(16, 17)
            ),
        ];

        $code = '<?php switch($a) {
case 1:
    break;
default:
    break;
}';

        yield 'case :' => [$expected, $code];

        $code = str_replace('case 1:', 'case 1;', $code);
        $code = str_replace('default:', 'DEFAULT;', $code);

        yield 'case ;' => [$expected, $code];

        yield 'no default, comments' => [
            [
                1 => new SwitchAnalysis(
                    1,
                    6,
                    18,
                    [
                        new CaseAnalysis(8, 12),
                    ],
                    null
                ),
            ],
            '<?php switch($a) {
case 1/* 1 */:
    break;
/* 2 */}',
        ];

        yield 'ternary case' => [
            [
                2 => new SwitchAnalysis(
                    2,
                    8,
                    27,
                    [
                        new CaseAnalysis(10, 22),
                    ],
                    null
                ),
            ],
            '<?php
                switch ($a) {
                    case $b ? "c" : "d" ;
                        break;
                }',
        ];

        yield 'nested' => [
            [
                1 => new SwitchAnalysis(
                    1,
                    8,
                    55,
                    [
                        new CaseAnalysis(10, 13),
                        new CaseAnalysis(18, 21),
                        new CaseAnalysis(47, 50),
                    ],
                    null
                ),
                23 => new SwitchAnalysis(
                    23,
                    30,
                    42,
                    [
                        new CaseAnalysis(32, 35),
                    ],
                    null
                ),
            ],
            '<?php
switch(foo()) {
    CASE 1:

        break;
    case 2:
        switch(bar()) {
            case 1:
                echo 1;
        }

        break;
    case 3:
        break;
}
',
        ];

        yield 'alternative syntax 2' => [
            [
                3 => new SwitchAnalysis(
                    3,
                    8,
                    32,
                    [
                        new CaseAnalysis(10, 13),
                    ],
                    null
                ),
            ],
            '<?php /* */ switch ($foo):
case 1:
    $foo = new class {};
    break;
endswitch ?>',
        ];

        yield [
            [],
            '<?php',
        ];

        yield 'function with return type' => [
            [1 => new SwitchAnalysis(1, 7, 43, [new CaseAnalysis(9, 12), new CaseAnalysis(33, 36)], null)],
            '<?php switch ($foo) { case 10: function foo($x): int {}; return true; case 100: return false; }',
        ];

        yield 'function with nullable parameter' => [
            [1 => new SwitchAnalysis(1, 7, 43, [new CaseAnalysis(9, 12), new CaseAnalysis(33, 36)], null)],
            '<?php switch ($foo) { case 10: function foo(?int $x) {}; return true; case 100: return false; }',
        ];
    }

    /**
     * @param int[] $types
     *
     * @requires PHP 8.1
     * @dataProvider provideFindControlStructuresPhp81Cases
     */
    public function testFindControlStructuresPhp81(array $expectedAnalyses, string $source, array $types): void
    {
        $tokens = Tokens::fromCode($source);
        $analyses = iterator_to_array(ControlCaseStructuresAnalyzer::findControlStructures($tokens, $types));

        static::assertCount(\count($expectedAnalyses), $analyses);

        foreach ($expectedAnalyses as $index => $expectedAnalysis) {
            self::assertAnalysis($expectedAnalysis, $analyses[$index]);
        }
    }

    public function provideFindControlStructuresPhp81Cases(): \Generator
    {
        $switchAnalysis = new SwitchAnalysis(1, 6, 26, [new CaseAnalysis(8, 11)], new DefaultAnalysis(18, 19));
        $enumAnalysis = new EnumAnalysis(28, 35, 51, [new CaseAnalysis(37, 41), new CaseAnalysis(46, 49)]);
        $matchAnalysis = new MatchAnalysis(57, 63, 98, new DefaultAnalysis(89, 91));

        $code = '<?php
switch($a) {
    case 1:
        echo 2;
    default:
        echo 1;
}

enum Suit: string {
    case Hearts = "foo";
    case Hearts2;
}

$expressionResult = match ($condition) {
    1, 2 => foo(),
    3, 4 => bar(),
    default => baz(),
};
'
        ;

        yield [
            [
                1 => $switchAnalysis,
            ],
            $code,
            [T_SWITCH],
        ];

        if (\defined('T_ENUM')) { // @TODO: drop condition when PHP 8.1+ is required - sadly PHPUnit still calls the provider even if requires condition is not matched
            yield [
                [
                    1 => $switchAnalysis,
                    28 => $enumAnalysis,
                ],
                $code,
                [T_SWITCH, T_ENUM],
            ];
        }

        if (\defined('T_MATCH')) { // @TODO: drop condition when PHP 8.0+ is required - sadly PHPUnit still calls the provider even if requires condition is not matched
            yield [
                [
                    57 => $matchAnalysis,
                ],
                $code,
                [T_MATCH],
            ];
        }
    }

    public function testNoSupportedControlStructure(): void
    {
        $tokens = Tokens::fromCode('<?php if(time() > 0){ echo 1; }');

        $this->expectException(\InvalidArgumentException::class);
        $this->expectExceptionMessage(sprintf('Unexpected type "%d".', T_IF));

        foreach (ControlCaseStructuresAnalyzer::findControlStructures($tokens, [T_IF]) as $analysis) {
            echo 1; // we need to use `foreach` here to prevent PHP removing the call as optimization
        }
    }

    private static function assertAnalysis(AbstractControlCaseStructuresAnalysis $expectedAnalysis, AbstractControlCaseStructuresAnalysis $analysis): void
    {
        $serializeExpected = serialize($expectedAnalysis);
        $serializeActual = serialize($analysis);

        if ($serializeExpected === $serializeActual) {
            static::assertTrue(true);

            return;
        }

        static::assertSame($expectedAnalysis->getIndex(), $analysis->getIndex(), 'index');
        static::assertSame($expectedAnalysis->getOpenIndex(), $analysis->getOpenIndex(), 'open index');
        static::assertSame($expectedAnalysis->getCloseIndex(), $analysis->getCloseIndex(), 'close index');
        static::assertInstanceOf(\get_class($expectedAnalysis), $analysis);

        if ($expectedAnalysis instanceof MatchAnalysis || $expectedAnalysis instanceof SwitchAnalysis) {
            $expectedDefault = $expectedAnalysis->getDefaultAnalysis();
            $actualDefault = $analysis->getDefaultAnalysis(); // @phpstan-ignore-line already type checked against expected

            if (null === $expectedDefault) {
                static::assertNull($actualDefault, 'default not null');
            } else {
                static::assertSame($expectedDefault->getIndex(), $actualDefault->getIndex(), 'default index');
                static::assertSame($expectedDefault->getColonIndex(), $actualDefault->getColonIndex(), 'default colon index');
            }
        }

        if ($expectedAnalysis instanceof EnumAnalysis || $expectedAnalysis instanceof SwitchAnalysis) {
            $expectedCases = $expectedAnalysis->getCases();
            $actualCases = $analysis->getCases(); // @phpstan-ignore-line already type checked against expected

            static::assertCount(\count($expectedCases), $actualCases);

            foreach ($expectedCases as $i => $expectedCase) {
                static::assertSame($expectedCase->getIndex(), $actualCases[$i]->getIndex(), 'case index');
                static::assertSame($expectedCase->getColonIndex(), $actualCases[$i]->getColonIndex(), 'case colon index');
            }
        }

        static::assertSame($serializeExpected, $serializeActual);
    }
}
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:1:{s:36:"\PhpCsFixer\Tests\Tokenizer\Analyzer";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:36:"\PhpCsFixer\Tests\Tokenizer\Analyzer";s:36:" phpDocumentor\Reflection\Fqsen name";s:8:"Analyzer";}}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:1:{s:70:"\PhpCsFixer\Tests\Tokenizer\Analyzer\ControlCaseStructuresAnalyzerTest";O:35:"phpDocumentor\Reflection\Php\Class_":13:{s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:70:"\PhpCsFixer\Tests\Tokenizer\Analyzer\ControlCaseStructuresAnalyzerTest";s:36:" phpDocumentor\Reflection\Fqsen name";s:33:"ControlCaseStructuresAnalyzerTest";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:0:"";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:45:"phpDocumentor\Reflection\DocBlock\Tags\Covers":3:{s:7:" * name";s:6:"covers";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:53:" phpDocumentor\Reflection\DocBlock\Tags\Covers refers";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:60:"\PhpCsFixer\Tokenizer\Analyzer\ControlCaseStructuresAnalyzer";s:36:" phpDocumentor\Reflection\Fqsen name";s:29:"ControlCaseStructuresAnalyzer";}}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:8:"internal";s:14:" * description";N;}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:35:"PhpCsFixer\Tests\Tokenizer\Analyzer";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:9:{s:8:"TestCase";s:25:"PhpCsFixer\Tests\TestCase";s:37:"AbstractControlCaseStructuresAnalysis";s:76:"PhpCsFixer\Tokenizer\Analyzer\Analysis\AbstractControlCaseStructuresAnalysis";s:12:"CaseAnalysis";s:51:"PhpCsFixer\Tokenizer\Analyzer\Analysis\CaseAnalysis";s:15:"DefaultAnalysis";s:54:"PhpCsFixer\Tokenizer\Analyzer\Analysis\DefaultAnalysis";s:12:"EnumAnalysis";s:51:"PhpCsFixer\Tokenizer\Analyzer\Analysis\EnumAnalysis";s:13:"MatchAnalysis";s:52:"PhpCsFixer\Tokenizer\Analyzer\Analysis\MatchAnalysis";s:14:"SwitchAnalysis";s:53:"PhpCsFixer\Tokenizer\Analyzer\Analysis\SwitchAnalysis";s:29:"ControlCaseStructuresAnalyzer";s:59:"PhpCsFixer\Tokenizer\Analyzer\ControlCaseStructuresAnalyzer";s:6:"Tokens";s:27:"PhpCsFixer\Tokenizer\Tokens";}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:1;s:43:" phpDocumentor\Reflection\Php\Class_ parent";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:26:"\PhpCsFixer\Tests\TestCase";s:36:" phpDocumentor\Reflection\Fqsen name";s:8:"TestCase";}s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:0:{}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:0:{}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:6:{s:99:"\PhpCsFixer\Tests\Tokenizer\Analyzer\ControlCaseStructuresAnalyzerTest::testFindControlStructures()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:0:"";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:12:"dataProvider";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:33:"provideFindControlStructuresCases";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:36;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:99:"\PhpCsFixer\Tests\Tokenizer\Analyzer\ControlCaseStructuresAnalyzerTest::testFindControlStructures()";s:36:" phpDocumentor\Reflection\Fqsen name";s:25:"testFindControlStructures";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:2:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:16:"expectedAnalyses";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:6:"source";s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:37;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:47;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:36:"phpDocumentor\Reflection\Types\Void_":0:{}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:107:"\PhpCsFixer\Tests\Tokenizer\Analyzer\ControlCaseStructuresAnalyzerTest::provideFindControlStructuresCases()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:107:"\PhpCsFixer\Tests\Tokenizer\Analyzer\ControlCaseStructuresAnalyzerTest::provideFindControlStructuresCases()";s:36:" phpDocumentor\Reflection\Fqsen name";s:33:"provideFindControlStructuresCases";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:49;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:318;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:10:"\Generator";s:36:" phpDocumentor\Reflection\Fqsen name";s:9:"Generator";}}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:104:"\PhpCsFixer\Tests\Tokenizer\Analyzer\ControlCaseStructuresAnalyzerTest::testFindControlStructuresPhp81()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:0:"";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:3:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:38:"phpDocumentor\Reflection\Types\Integer":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:5:"types";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:8:"requires";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:7:"PHP 8.1";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:2;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:12:"dataProvider";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:38:"provideFindControlStructuresPhp81Cases";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:36;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:104:"\PhpCsFixer\Tests\Tokenizer\Analyzer\ControlCaseStructuresAnalyzerTest::testFindControlStructuresPhp81()";s:36:" phpDocumentor\Reflection\Fqsen name";s:30:"testFindControlStructuresPhp81";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:3:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:16:"expectedAnalyses";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:6:"source";s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:2;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:5:"types";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:326;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:336;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:36:"phpDocumentor\Reflection\Types\Void_":0:{}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:112:"\PhpCsFixer\Tests\Tokenizer\Analyzer\ControlCaseStructuresAnalyzerTest::provideFindControlStructuresPhp81Cases()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:112:"\PhpCsFixer\Tests\Tokenizer\Analyzer\ControlCaseStructuresAnalyzerTest::provideFindControlStructuresPhp81Cases()";s:36:" phpDocumentor\Reflection\Fqsen name";s:38:"provideFindControlStructuresPhp81Cases";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:338;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:393;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:10:"\Generator";s:36:" phpDocumentor\Reflection\Fqsen name";s:9:"Generator";}}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:105:"\PhpCsFixer\Tests\Tokenizer\Analyzer\ControlCaseStructuresAnalyzerTest::testNoSupportedControlStructure()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:105:"\PhpCsFixer\Tests\Tokenizer\Analyzer\ControlCaseStructuresAnalyzerTest::testNoSupportedControlStructure()";s:36:" phpDocumentor\Reflection\Fqsen name";s:31:"testNoSupportedControlStructure";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:395;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:405;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:36:"phpDocumentor\Reflection\Types\Void_":0:{}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:88:"\PhpCsFixer\Tests\Tokenizer\Analyzer\ControlCaseStructuresAnalyzerTest::assertAnalysis()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:88:"\PhpCsFixer\Tests\Tokenizer\Analyzer\ControlCaseStructuresAnalyzerTest::assertAnalysis()";s:36:" phpDocumentor\Reflection\Fqsen name";s:14:"assertAnalysis";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:1;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:2:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:16:"expectedAnalysis";s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:77:"\PhpCsFixer\Tokenizer\Analyzer\Analysis\AbstractControlCaseStructuresAnalysis";s:36:" phpDocumentor\Reflection\Fqsen name";s:37:"AbstractControlCaseStructuresAnalysis";}}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:8:"analysis";s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:77:"\PhpCsFixer\Tokenizer\Analyzer\Analysis\AbstractControlCaseStructuresAnalysis";s:36:" phpDocumentor\Reflection\Fqsen name";s:37:"AbstractControlCaseStructuresAnalysis";}}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:407;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:448;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:36:"phpDocumentor\Reflection\Types\Void_":0:{}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:32;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Class_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:449;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:45:" phpDocumentor\Reflection\Php\Class_ metadata";a:0:{}}}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";